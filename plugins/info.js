 const baileys = require('@whiskeysockets/baileys')
 const moment = require('moment-timezone') 
 const gradient = require('gradient-string') 
 const fetch = require('node-fetch') 
 const axios = require('axios')
 const cheerio = require('cheerio')
 const Jimp = require('jimp')
 const os = require('os')
 const chalk = require('chalk')
 const fs = require("fs")
const { smsg, getGroupAdmins, formatp, tanggal, formatDate, getTime, isUrl, sleep, clockString, runtime, fetchJson, getBuffer, jsonformat, delay, format, logic, generateProfilePicture, parseMention, getRandom } = require('../libs/fuctions.js'); 

async function state(conn, m, speed, sender, fkontak) {
const totalMemory = Math.round(os.totalmem() / (1024 * 1024 * 1024))
const freeMemory = Math.round(os.freemem() / (1024 * 1024 * 1024))
const usedMemory = totalMemory - freeMemory
const cpuUsage = os.loadavg()[0]
let me = m.sender
var timestamp = speed();  
var latensi = speed() - timestamp  
let getGroups = await conn.groupFetchAllParticipating()
let groups = Object.entries(getGroups).slice(0).map(entry => entry[1])
let anu = groups.map(v => v.id)
let user = [...new Set([...global.listJadibot.filter((conn) => conn.user && conn.ws.socket && conn.ws.socket.readyState !== ws.CLOSED).map((conn) => conn)])];
if (global.db.data.users[m.sender].registered < true) return m.reply(info.registra)
let stateRun = `‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚ù∞ÔΩ•ùêÑùêíùêìùêÄùêÉùêé ùêÉùêÑùêã ùêÅùêéùêìÔΩ•‚ù±‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉ
‚îÉÏõÉ Hola @${sender.split("@")[0]} ${user.registered === true ? 'ÕßÕßÕßÕ¶Íô∂Õ£Õ§‚úì' : ''} 
‚îÉ
‚îÉ‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç
‚îÉ
‚îÉ‚û¢ ùöÅùô∞ùôº ùô≥ùô¥ùôª ùöÇùô¥ùöÅùöÖùô∏ùô≥ùôæùöÅ : ${usedMemory} GB / ${totalMemory} GB
‚îÉ‚û¢ ùôøùôªùô∞ùöÉùô∞ùôµùôæùöÅùôºùô∞ : ${os.platform()}
‚îÉ‚û¢ ùô∑ùôæùöÉùöÇ : ${os.hostname()}
‚îÉ‚û¢ ùô≤ùôøùöÑ ùöÑùöÇùô∞ùôΩùô≥ùôæ : ${cpuUsage.toFixed(2)}%
‚îÉ‚û¢ ùôºùô¥ùôºùôæùöÅùô∏ùô∞ ùöÉùôæùöÉùô∞ùôª : ${totalMemory} GB
‚îÉ‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç‚ïç
‚îÉ‚û¢ ùöÑùöÇùöÑùô∞ùöÅùô∏ùôæùöÇ : ${Object.keys(global.db.data.users).length}
‚îÉ‚û¢ ùô≤ùô∑ùô∞ùöÉ ùöÉùôæùöÉùô∞ùôªùô¥ùöÇ : ${anu.length} 
‚îÉ‚û¢ ùô∞ùô≤ùöÉùô∏ùöÖùôæ : ${runtime(process.uptime())} 
‚îÉ‚û¢ ùôºùôæùô≥ùôæ : ${conn.public ? 'P√∫blico' : `Privado`}
‚îÉ‚û¢ ùô±ùôæùöÉ ùöÇùô¥ùô≤ùöÑùôΩùô≥ùô∞ùöÅùô∏ùôæùöÇ ùô∞ùô≤ùöÉùô∏ùöÖùôæùöÇ : ${user.length}
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ${conn.user.id == global.numBot2 ? '' : `\n\n‚û¢ ùêíùê®ùê≤ ùêÆùêß ùêíùêÆùêõùêÅùê®ùê≠ ùêùùêû : wa.me/${global.numBot.split`@`[0]}`}`.trim()
let ments = [me]      
await conn.sendMessage(m.chat, {image: imagen1, caption: stateRun, contextInfo:{ mentionedJid:[sender]}}, { quoted: fkontak })
}

async function owner(conn, m, sender) {
if (global.db.data.users[m.sender].registered < true) return m.reply(info.registra)
let vcard = `BEGIN:VCARD\nVERSION:3.0\nN:;OWNER üëë;;;\nFN:OWNER\nORG:OWNER üëë\nTITLE:\nitem1.TEL;waid=595975740803:+595 975 740803\nitem1.X-ABLabel:OWNER üëë\nX-WA-BIZ-DESCRIPTION:·¥ás·¥Ñ Ä…™ ô…™ s·¥è ü·¥è ·¥ò·¥è Ä ·¥Ñ·¥ès·¥Äs ·¥Ö·¥á ü  ô·¥è·¥õ.\nX-WA-BIZ-NAME:Owner üëë\nEND:VCARD`
let a = await conn.sendMessage(m.chat, { contacts: { displayName: '…¥·¥è·¥†·¥Ä ô·¥è·¥õ-·¥ç·¥Ö üëë', contacts: [{ vcard }] }}, {quoted: m})
await conn.sendMessage(m.chat, { text : `Hola @${sender.split("@")[0]}, este bot esta desarrollo si quiere contacta con mi creador aqui te dejo sus n√∫mero`, mentions: [sender]}, { quoted: a })
}

async function grupo(conn, m, sender) {
if (global.db.data.users[m.sender].registered < true) return m.reply(info.registra)
conn.sendMessage(m.chat, { text: `* ú·¥è ü·¥Ä ·¥ás·¥õ…™·¥ç·¥Ä·¥Ö·¥ès ·¥ús·¥ú·¥Ä Ä…™·¥ès üëãüèª, ·¥õ·¥á …™…¥·¥†…™·¥õ·¥è ·¥Ä ·¥ú…¥…™ Ä·¥õ·¥á ·¥Ä  ü·¥ès …¢ Ä·¥ú·¥ò·¥ès ·¥è“ì…™·¥Ñ…™·¥Ä ü·¥ás ·¥Ö·¥á  ü·¥Äs “ì·¥Ä·¥ç…™ ü·¥Äs ·¥õ ú·¥á  ü·¥è ü…™ ô·¥è·¥õ-·¥ç·¥Ö  è …¥·¥è·¥†·¥Ä ô·¥è·¥õ-·¥ç·¥Ö, ·¥ò·¥Ä Ä·¥Ä ·¥Ñ·¥è…¥·¥†…™·¥†…™ Ä ·¥Ñ·¥è…¥  ü·¥Ä ·¥Ñ·¥è·¥ç·¥ú…¥…™·¥Ö·¥Ä·¥Ö :·¥†*\n\n*‚û§ …¢ Ä·¥ú·¥ò·¥ès ·¥è“ì…™·¥Ñ…™·¥Ä ü·¥ás ·¥Ö·¥á ü  ô·¥è·¥õ:*\n1) ${nn}\n\n2) ${nn2}\n\n*‚û§ …¢ Ä·¥ú·¥ò·¥è ·¥Ö·¥á ü ·¥Ñ·¥è ü·¥Ä ô·¥è Ä·¥Ä·¥Ñ…™·¥è…¥:*\n‚Ä¢ ${nn3}\n\n‚Ä¢ ${nn4}\n\n‚Ä¢ ${nn5}\n\n*‚û§ …¢ Ä·¥ú·¥ò·¥ès ·¥õ·¥ás·¥õ ·¥ò·¥Ä Ä·¥Ä ·¥ò Ä·¥ú·¥á ô·¥Ä ·¥Ö·¥á ü  ô·¥è·¥õ:*\n‚Ä¢ ${nn6}\n\n*‚û§ …™…¥“ì·¥è·¥ç·¥Ä Ä·¥õ·¥á s·¥è ô Ä·¥á  ü·¥Äs …¥·¥ú·¥á·¥†·¥Äs ·¥Ä·¥Ñ·¥õ·¥ú·¥Ä ü…™·¥¢·¥Ä·¥Ñ…™·¥è…¥·¥ás ·¥Ö·¥á ü  ô·¥è·¥õ ·¥Ä«´·¥ú…™:*\n‚Ä¢ ${nna}\n\n*‚û§ …¢ Ä·¥ú·¥ò·¥è ·¥Ö·¥á ü ·¥Ä è·¥ú·¥Ö·¥Ä s·¥è ô Ä·¥á ·¥á ü  ô·¥è·¥õ:*\n‚Ä¢ ${nn7}\n\n‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà\n‚Ä¢ …¢ Ä·¥ú·¥ò·¥ès ·¥Ö·¥á ü ·¥Ä·¥ç…™s·¥õ·¥Ä·¥Ö·¥ás ·¥Ö·¥è…¥·¥Ö·¥á ·¥ás·¥õ·¥Ä ·¥á ü  ô·¥è·¥õ\n\n*‚á∂‚É§Íô∞ùë¨ùíèùíçùíÇùíÑùíÜ ùíçùíêùíçùíäùíÉùíêùíïÍ¶ø‚Éü‚É¢*\n${nn8}\n‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà\n\ns…™ «´·¥ú…™·¥á Ä·¥ás «´·¥ú·¥á ·¥õ·¥ú …¢ Ä·¥ú·¥ò·¥è ·¥Ä·¥ò·¥Ä Ä·¥á·¥¢·¥Ñ·¥Ä…¥ ·¥Ä·¥Ñ·¥Ä  ú·¥Ä ô ü·¥Ä ·¥Ñ·¥è…¥ ·¥á ü ·¥Ä·¥Ö·¥ç…™…¥ ·¥è“ì·¥Ñ ·¥Ö·¥á ü  ô·¥è·¥õ`}, { quoted: m })
}

async function instalar(conn, m, pushname, sender) {
if (global.db.data.users[m.sender].registered < true) return m.reply(info.registra)
conn.sendMessage(m.chat, { text: `‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚îÇ \`\`\`COMO INSTALAR ESTE BOT?\`\`\`
‚ï∞‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚îå‚î§ \`\`\`üìå REQUISITOS PARA LAS INSTALACION \`\`\`
‚îå‚î§‚ùáÔ∏è _Dudas: wa.me/595975740803_
‚îå‚î§‚ùáÔ∏è _Tutor√≠al: https://youtu.be/OhbJjp0L2QA?si=l4k6qUcz0aLMzZDJ_
‚îå‚î§‚ùáÔ∏è _1 GB de almacenamiento_
‚îå‚î§‚ùáÔ∏è _Termux: https://www.mediafire.com/file/3hsvi3xkpq3a64o/termux_118.apk/file_
‚îå‚î§‚ùáÔ∏è _GitHub: ${md}_
‚îå‚î§‚ùáÔ∏è _un whatsapp inmune (secundario)_
‚îå‚î§‚ùáÔ∏è _un n√∫mero victual (otro numero)_
‚îå‚î§‚ùáÔ∏è _2 dispositivo o una PC para escanear_
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑

 \`\`\`üìå COMANDO DE INSTALACION TERMUX\`\`\`

> termux-setup-storage

> apt update && apt upgrade && pkg update && pkg upgrade && pkg install bash && pkg install libwebp && pkg install git -y && pkg install nodejs -y && pkg install ffmpeg -y && pkg install wget && pkg install imagemagick -y && pkg install yarn

> git clone https://github.com/elrebelde21/NovaBot-MD && cd NovaBot-MD && yarn && npm install

> npm start
( è ·¥Ä·¥Ñ·¥Ä «´·¥ú·¥á ·¥†·¥Ä…¥ ·¥ç·¥Ä…¥·¥Ö·¥Ä ·¥á ü «´ Ä ·¥õ·¥á…¥·¥á Ä  ü·¥Ä ·¥è·¥ò·¥Ñ…™·¥è…¥ s·¥Ä·¥Ñ·¥Ä ·¥ú…¥·¥Ä ·¥Ñ·¥Ä Ä·¥õ·¥ú Ä·¥Ä  è ·¥ç·¥Ä…¥·¥Ö·¥Ä ü·¥Ä ·¥Ä ·¥õ·¥ú ·¥è·¥õ Ä·¥è ·¥Ñ·¥á ü·¥ú ü·¥Ä Ä  è ·¥ás·¥Ñ·¥Ä…¥·¥á·¥Ä  Ä·¥Ä·¥ò…™·¥Ö·¥è)`,
contextInfo:{
mentions: [sender], 
forwardingScore: 9999999,
isForwarded: true, 
"externalAdReply": {
"showAdAttribution": true,
"containsAutoReply": true,
"title": ` ${wm}`,
"body": `${pushname}`,
"previewType": "PHOTO",
"thumbnailUrl": ``,
"thumbnail": imagen1, 
"sourceUrl": md}}},
{ quoted: m})
}

async function ping(conn, from, msg, speed) {
if (global.db.data.users[m.sender].registered < true) return m.reply(info.registra)
var timestamp = speed();  
var latensi = speed() - timestamp  
conn.sendMessage(from, { text: `*Pong üèì  ${latensi.toFixed(4)}*` }, { quoted: msg  })
}

async function report(conn, from, m, prefix, command, text) {
if (global.db.data.users[m.sender].registered < true) return m.reply(info.registra)
if (!text) return m.reply(`*ùô∏ùôΩùô∂ùöÅùô¥ùöÇùô¥ ùô¥ùôª ùô≤ùôæùôºùô∞ùôΩùô≥ùôæ ùô≤ùôæùôΩ ùôµùô∞ùôªùôªùôæùöÇ*\n\n*ùô¥ùôπùô¥ùôºùôøùôªùôæ:*\n${prefix + command} sticker no funciona`)
conn.sendMessage(`595975740803@s.whatsapp.net`, {text: `‚ï≠‚îÅ‚îÅ„Äî *ùöÅùô¥ùôøùôæùöÅùöÉùô¥ | ùöÅùô¥ùôøùôæùöÅùöÉ * „Äï‚îÅ‚îÅ‚¨£\n‚îÉ\n‚îÉ‚úø *ùôΩùöûùöñùöéùöõùöò | ùöóùöûùöñùöãùöéùöõ*\n‚îÉ‚á¢ wa.me/${m.sender.split("@")[0]}\n‚îÉ\n‚îÉ‚úø *ùôºùöéùöóùöúùöäùöìùöé | ùöùùöéùö°ùöù*\n‚îÉ: ${text}‚îÉ\n‚ï∞‚îÅ‚îÅ‚îÅ„Äî *${vs}* „Äï‚îÅ‚îÅ‚îÅ‚¨£` })
m.reply(`*ùô¥ùôª ùöÅùô¥ùôøùôæùöÅùöÉùô¥ ùôµùöÑùô¥ ùô¥ùôΩùöÖùô∏ùô∞ùô≥ùôæ ùô∞ ùôºùô∏ ùô≤ùöÅùô¥ùô∞ùô≥ùôæùöÅ, ùôΩùôæùöÇ ùô≤ùôæùôΩùöÉùô∞ùöÅùô¥ùôºùôæùöÇ ùô≤ùôæùôΩ ùöÑùöÇùöÉùô¥ùô≥ ùöÇùô∏ ùô¥ùöÇ ùôΩùô¥ùô≤ùô¥ùöÇùô∞ùöÅùô∏ùôæ, ùô≥ùô¥ ùöÇùô¥ùöÅ ùôµùô∞ùôªùöÇùôæ ùöÇùô¥ùöÅùô∞ ùô∏ùô∂ùôΩùôæùöÅùô∞ùô≥ùôæ ùöà ùô±ùôªùôæùöÄùöÑùô¥ùô∞ùô≥ùôæ ùô≥ùô¥ùôª ùô±ùôæùöÉ*`)
}

async function ow(conn, args, m) {   
if (!args.join(" ")) return m.reply(`‚îó‚ù¥ ‚ö† ùêÄùêÉùêïùêÑùêëùêìùêÑùêçùêÇùêàùêÄ ‚ö† ‚ùµ‚îõ\n\n·¥ás·¥õ·¥Ä ·¥ò Ä·¥è ú…™ ô…™·¥Ö·¥è ·¥á·¥õ…™«´·¥ú·¥á·¥õ·¥Ä Ä ·¥Ä ü ·¥Ñ Ä·¥á·¥Ä·¥Ö·¥è Ä/·¥Ö·¥ás·¥Ä Ä Ä·¥è ü ü·¥è s…™ ·¥õ…™·¥á…¥·¥ás ·¥ú…¥·¥Ä s·¥ú…¢·¥á Ä·¥á…¥·¥Ñ…™·¥Äs  Ä·¥á“ì·¥á Ä·¥á…¥·¥õ·¥á ·¥Ä ü  ô·¥è·¥õ ·¥ás·¥Ñ Ä…™ ô…™ Ä ü·¥á ·¥Ä s·¥ús ·¥ò Ä…™·¥†.`)
teks = `*|  |*`
teks1 = `\n\nN`
teks2 = `\n\n`
for (let i of owner) {
conn.sendMessage(i + "@s.whatsapp.net", {text: teks + teks1, mentions:[m.sender]}, {quoted:m})
}
conn.sendMessage(m.chat, {text: teks + teks2 + teks1, mentions:[m.sender]}, {quoted:m})
}

module.exports = { state, owner, grupo, instalar, ping, report, ow}

let file = require.resolve(__filename)
fs.watchFile(file, () => {
	fs.unwatchFile(file)
	console.log(chalk.redBright(`Update ${__filename}`))
	delete require.cache[file]
	require(file)
})
